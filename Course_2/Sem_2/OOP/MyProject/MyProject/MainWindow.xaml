<Window WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" x:Class="MyProject.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyProject"
        xmlns:custom="clr-namespace:MyProject.CustomControls"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="500">
    <Window.Resources>
        <Style x:Key="ButtonTranslate" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Coral"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BorderButton" BorderThickness="0" BorderBrush="Red" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"  Duration="0:0:0.100" To="2,2,0,0"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.100" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Points" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="BorderButton" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,0,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Input" TargetType="TextBox">
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="#FF313940"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#FF2D333D"/>
            <Setter Property="Padding" Value="10,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Background" BorderThickness="3" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          IsTabStop="False"
                                          Background="{x:Null}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF383C44"/>

                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF0E1116"/>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Text" Value=""/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="GotFocus" Handler="TextBlock_GotFocus"/>
        </Style>
        <Style x:Key="Inputa" TargetType="PasswordBox">
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="#FF313940"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#FF2D333D"/>
            <Setter Property="Padding" Value="10,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid x:Name="main" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Background" BorderThickness="3" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          IsTabStop="False"
                                          Background="{x:Null}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF383C44"/>

                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF0E1116"/>
                                <Setter Property="Background" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Style="{DynamicResource GridTheme}">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="120"/>
            <RowDefinition Height="200*"/>
            <RowDefinition Height="90*"/>

        </Grid.RowDefinitions>
        <Grid x:Name="ToolBar" Background="White" Grid.Row="0" MouseDown="ToolBar_MouseDown">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Background="Red" Width="20">
                <Image Height="15" Width="15" Source="/free-icon-close-6805305.png" Margin="2,0,0,0" MouseDown="Image_MouseDown_Cross"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Background="Lime" Margin="0,0,20,0" Width="20">
                <Image Height="15" Width="15"  Source="/collapse-window-option.png" Margin="2,0,0,0" MouseDown="Image_MouseDown_Collapse"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,0,0" >
                <Image Height="15" Width="20" Source="/sneakers.png" />
                <TextBlock Text="SneakersShop" Margin="5,5,0,0"/>
            </StackPanel>
        </Grid>

        <StackPanel Grid.Row="1" HorizontalAlignment="Left" Width="168" Margin="20,10,0,256" Grid.RowSpan="2">
            <custom:AnalogClock Margin="0,0,0,0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" Height="50" >

            <TextBlock Text="Welcome" FontSize="30">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.1" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Black" Duration="0:0:0.1" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="30" >
            <TextBlock Text="Please log in" FontSize="20"/>
        </StackPanel>
        <Border Grid.Row="2" Height="24" Width="25" HorizontalAlignment="Right"
                VerticalAlignment="Top" Margin="0,15,25,0" CornerRadius="2"
                BorderThickness="1" Background="Black">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="#FF333842"/>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF51555C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Button Style="{StaticResource ButtonTranslate}" Click="Button_Click_1">
                <StackPanel Orientation="Horizontal">
                    <Image Height="15" Width="15" Source="/language.png"/>

                </StackPanel>
            </Button>
        </Border>
        <Grid  Name="RightGrid" Panel.ZIndex="999" Visibility="Hidden" Grid.Row="2" Height="300" Width="310" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,42,15,0">
            <Polygon Fill="Black" StrokeThickness="2"  Stroke="Black"
                     Points="0,8,
                     0,60,
                     300,60
                     300,8
                     295,8
                     287,0
                     279,8" HorizontalAlignment="Center"/>
            <Polygon Fill="White" StrokeThickness="1" 
                     Points="0,8,
                     0,60,
                     300,60
                     300,8
                     295,8
                     287,0
                     279,8" HorizontalAlignment="Center" Stroke="White"/>
            <Grid Height="300" Width="299" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                <StackPanel Orientation="Vertical">

                    <Button Style="{StaticResource Points}" Height="50" Click="Button_Click_11">
                        <TextBlock Text="{DynamicResource translate}"/>
                    </Button>
                    <Button Style="{StaticResource Points}" Background="White">
                        <TextBlock Text="{DynamicResource themes}" FontSize="22" Foreground="Black" />
                    </Button>

                    <Button Style="{StaticResource Points}" Background="Aqua" Click="Button_Click_22">
                        <TextBlock Text="{DynamicResource standard}"/>
                    </Button>
                    <Button Style="{StaticResource Points}" Background="Brown" Click="Button_Click_23">
                        <TextBlock Text="{DynamicResource space}"/>
                    </Button>
                    <Button Style="{StaticResource Points}" Background="Indigo" Click="Button_Click_24">
                        <TextBlock Text="{DynamicResource white}" />
                    </Button>


                </StackPanel>
            </Grid>
        </Grid>
        <TextBox x:Name="tb1" Grid.Row="2" Style="{StaticResource Input}" Text="{DynamicResource name}" Margin="25,45,25,0"  VerticalAlignment="Top" LostFocus="tb1_LostFocus"/>
        <PasswordBox x:Name="tb2" Grid.Row="2" Style="{StaticResource Inputa}" Password="3214321"  Margin="25,100,25,0"  VerticalAlignment="Top"/>
        <local:UserControl1 x:Name="tb3"  MyText="ad" Grid.Row="2" Margin="0,155,0,0" HorizontalAlignment="Center" Width="450"/>
        <local:UserControl2  Grid.Row="2"  HorizontalAlignment="Center" Width="300" Height="50" Margin="0,150,10,0" Padding="0"/>
        <CheckBox x:Name="check1"  Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,90" Content="{DynamicResource Familiarized}" FontSize="20">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=check1, Path=IsChecked}" Value="True">
                            <Setter Property="Foreground" Value="Green" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <Border Grid.Row="3" Height="55" Width="310" 
                 Margin="25,20,25,0" 
                BorderThickness="1"  >

            <Button x:Name="ButtonLogin"  Content="{DynamicResource logIn}" FontSize="16" Click="Button_Click">
                <Button.Style>
                    <Style  TargetType="Button">
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="Lime"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding ElementName=check1, Path=IsChecked}"
                        Value="False">
                                <Setter Property="IsEnabled" Value="False"/>

                            </DataTrigger>

                        </Style.Triggers>
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Background" Value="Blue"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="30,0,30,0"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Black"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Border>
    </Grid>
</Window>
