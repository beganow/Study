2 ЛАБА:
1. поставки Oracle 12c:
Enterprise Edition
Standard Edition 2
Standard Edition
Express Edition
Personal Edition

2. Предопределенные пользователи БД Oracle:
SYS
SYSTEM


3. Табличное пространство - это логический контейнер, который представляет собой группу сегментов данных, связанных с конкретным объектом базы данных.

4. Файлы данных, такие как datafiles, control files и redo log files, содержат физические данные базы данных. Они создаются для хранения и управления данными в табличных пространствах.

5. Некоторые параметры табличного пространства:

размер
автоматическое расширение
блочный размер
контрольный файл

6. Типы табличных пространств:
SYSTEM - используется для хранения служебной информации
TEMP - используется для хранения временных объектов
UNDO - используется для хранения информации об откате транзакций
USER - используется для хранения объектов, созданных пользователями

7. Роль - это именованный набор системных привилегий и/или объектных привилегий, который может быть назначен пользователям или другим ролям.

8. Некоторые системные роли:

CONNECT - позволяет пользователю подключаться к базе данных
RESOURCE - позволяет пользователю создавать таблицы, индексы и другие объекты базы данных
DBA - имеет полный доступ к базе данных
AUDITOR - может просматривать служебную информацию о базе данных
EXECUTE_CATALOG_ROLE - позволяет пользователю выполнять процедуры в схеме SYS

9. Системная привилегия - это право, которое предоставляет пользователю определенную функциональность в базе данных. Например, привилегия CREATE TABLE позволяет пользователю создавать таблицы в базе данных.

10. Некоторые специальные системные привилегии администратора БД:

SYSDBA - позволяет пользователю выполнять любые операции в базе данных
SYSOPER - позволяет пользователю выполнять ограниченный набор операций в базе данных
SYSBACKUP - позволяет пользователю выполнить резервное копирование базы данных

11. Профиль безопасности - это механизм, который позволяет ограничивать права пользователей базы данных, устанавливая лимиты на их ресурсы и доступные операции. Профиль безопасности позволяет администраторам управлять аспектами безопасности БД, такими как длина пароля, ограничения на количество неудачных попыток аутентификации и т.д.

12. Некоторые известные параметры профиля безопасности включают в себя:

PASSWORD_LIFE_TIME: Определяет период времени, после которого пользователь должен изменить свой пароль.
PASSWORD_REUSE_TIME: Определяет период времени, после которого пользователь может повторно использовать свой старый пароль.
PASSWORD_REUSE_MAX: Определяет количество раз, которое пользователь может повторно использовать свой старый пароль.
FAILED_LOGIN_ATTEMPTS: Определяет количество неудачных попыток аутентификации пользователя, после которого учетная запись будет заблокирована.
SESSIONS_PER_USER: Определяет максимальное количество сессий, которые могут быть открыты одновременно для данного пользователя.
CPU_PER_SESSION: Определяет максимальное количество процессорного времени, которое может использовать пользователь за одну сессию.

13. Профиль безопасности с именем DEFAULT является профилем по умолчанию, который применяется к новым пользователям, если для них не указан другой профиль. Этот профиль содержит основные параметры безопасности, такие как длина пароля, количество неудачных попыток аутентификации и т.д.

14. Пользователь базы данных - это учетная запись, которая используется для аутентификации и авторизации пользователей при доступе к базе данных. Каждый пользователь имеет свои учетные данные и привилегии, которые могут быть ограничены через профиль безопасности.

15. Некоторые известные параметры пользователя БД Oracle включают в себя:

USERNAME: Имя пользователя
DEFAULT_TABLESPACE: Табличное пространство по умолчанию, используемое пользователем для создания таблиц.
TEMPORARY_TABLESPACE: Табличное пространство для временных объектов.
PROFILE: Профиль безопасности, назначенный пользователю.
ACCOUNT_STATUS: Статус учетной записи пользователя.
PASSWORD_VERSIONS: Версии пароля, которые пользователь может использовать.

16. В Oracle квота - это лимит на количество дискового пространства, которое может быть занято объектом базы данных, например, пользователем или табличным пространством. Квоты устанавливаются для каждого пользователя или табличного пространства отдельно и могут быть изменены администратором базы данных.

17. Представления словаря базы данных Oracle - это набор предопределенных таблиц и представлений, которые содержат метаданные и информацию о различных объектах базы данных, таких как таблицы, индексы, представления, пользователи, роли, профили и т.д. Некоторые из наиболее известных представлений словаря Oracle:

USER_TABLES - содержит информацию о таблицах, созданных текущим пользователем
USER_TAB_COLUMNS - содержит информацию о столбцах таблиц, созданных текущим пользователем
USER_INDEXES - содержит информацию об индексах, созданных текущим пользователем
USER_OBJECTS - содержит информацию обо всех объектах, созданных текущим пользователем
USER_CONSTRAINTS - содержит информацию о констрейнтах, созданных текущим пользователем
DBA_TABLES - содержит информацию о всех таблицах в базе данных
DBA_USERS - содержит информацию о всех пользователях в базе данных
DBA_ROLES - содержит информацию о всех ролях в базе данных
DBA_SYS_PRIVS - содержит информацию о системных привилегиях, предоставленных пользователям
V$SESSION - содержит информацию о сеансах пользователей, подключенных к базе данных
Это только некоторые из множества представлений словаря базы данных Oracle. Они предназначены для использования администраторами баз данных и разработчиками приложений, чтобы получить информацию о базе данных и ее объектах.
------------------------------------------------------------------------------------------------------------------------------
3 ЛАБА:
1. Словарь данных Oracle - это коллекция предопределенных объектов базы данных, содержащих информацию о структуре и состоянии базы данных. Он необходим для управления базой данных и предоставляет доступ к метаданным и статистической информации.

2. Представления словаря данных Oracle могут быть классифицированы следующим образом:

Представления диспетчера задач (Scheduler)
Представления управления сегментами памяти (SGA)
Представления управления процессами (Processes)
Представления управления сегментами таблицы (Tablespaces)
Представления управления пользователями и объектами (Users and Objects)
Представления управления доступом и привилегиями (Access and Privileges)
Представления управления хранилищами данных (Storage)

3. Клиент-серверная архитектура Oracle 12c означает, что база данных работает как сервер, обрабатывая запросы и обеспечивая доступ к данным через сеть, в то время как клиентские приложения запускаются на отдельных компьютерах и обращаются к базе данных через сеть.

4. Экземпляр (инстанс) сервера СУБД - это набор процессов и памяти, созданных при запуске базы данных, обеспечивающих ее функционирование и обработку запросов. Каждый экземпляр базы данных имеет свое уникальное имя и использует свои ресурсы (память, процессорное время и дисковое пространство).

5. Этапы старта и останова инстанса Oracle 12c:

Определение параметров конфигурации базы данных
Загрузка SGA
Запуск фоновых процессов (background processes)
Открытие базы данных (mount)
Открытие базы данных для доступа (open)
Остановка инстанса в обратном порядке: закрытие базы данных и выгрузка SGA.

6. Путь к файлу конфигурации базы данных (init.ora) указывается в переменной окружения ORACLE_SID на сервере базы данных.

7. Опция Oracle 12c Multitenant позволяет создавать и управлять множеством независимых баз данных внутри одной CDB (контейнерной базы данных). Это упрощает управление базами данных и повышает эффективность использования ресурсов сервера.

8. В Oracle 12c база данных (Database) может быть типа Container Database (CDB) или Pluggable Database (PDB). CDB - это основная база данных, которая содержит словарь данных и управляет PDB. PDB - это контейнер, который может быть подключен и отключен от CDB. PDB$SEED - это шаблон, на основе которого создаются новые PDB.

9. Общий пользователь (Common User) в Oracle 12c Multitenant - это пользователь, который может подключаться к CDB или к любой PDB, без необходимости создания отдельного пользователя в каждой PDB.

10. При инсталляции СУБД Oracle 12c автоматически создаются следующие табличные пространства:

SYSTEM: содержит объекты словаря данных и другие системные объекты
SYSAUX: содержит служебную информацию, которая помогает управлять базой данных
UNDO: используется для хранения информации, необходимой для отката изменений в базе данных
TEMP: используется для хранения временных таблиц и результатов запросов

11. При инсталляции СУБД Oracle 12c обязательно создаются два пользователя:
SYS: это администратор базы данных, который имеет полный доступ к базе данных, включая словарь данных.
SYSTEM: это пользователь, который управляет базой данных и может выполнять некоторые административные задачи.

12. В каждой PDB дублируются системные табличные пространства:
SYSTEM: содержит объекты словаря данных и другие системные объекты
SYSAUX: содержит служебную информацию, которая помогает управлять базой данных
TEMP: используется для хранения временных таблиц и результатов запросов

13. Консолидация баз данных - это процесс объединения нескольких баз данных в одну, чтобы улучшить управляемость, масштабируемость и использование ресурсов. Прибегают к консолидации баз данных в случаях, когда организация имеет несколько баз данных, которые могут быть объединены в одну, чтобы упростить управление и использование ресурсов.

14. Oracle 12c Multitenant предоставляет несколько преимуществ, среди которых:

Экономия ресурсов: благодаря использованию общих ресурсов, управление несколькими базами данных в одной CDB становится гораздо более эффективным, чем управление отдельными базами данных.

Простота управления: вместо управления несколькими базами данных в одиночку, администратор баз данных может управлять всей CDB как одним единством, что упрощает управление и мониторинг баз данных.

Гибкость: благодаря возможности создавать и удалять PDB по мере необходимости, администраторы баз данных могут быстро реагировать на изменения бизнес-требований и создавать новые PDB для новых приложений.

Более высокая безопасность: каждая PDB может иметь свои собственные пользователей и роли, что обеспечивает более высокий уровень безопасности.

Упрощенное обновление баз данных: при обновлении базы данных, администратор может сначала обновить PDB, а затем обновить CDB, что упрощает процесс обновления.

Экономия дискового пространства: общие объекты базы данных (например, справочники или таблицы справочников) можно хранить в PDB$SEED и использовать для всех PDB, что позволяет экономить дисковое пространство.




